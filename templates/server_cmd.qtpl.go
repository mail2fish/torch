// This file is automatically generated by qtc from "server_cmd.qtpl".
// See https://github.com/valyala/quicktemplate for details.

//line server_cmd.qtpl:1
package templates

//line server_cmd.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line server_cmd.qtpl:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line server_cmd.qtpl:1
func StreamGenerateServerCmd(qw422016 *qt422016.Writer, prefix string, appPath string, basename string) {
	//line server_cmd.qtpl:1
	qw422016.N().S(`
package cmd

import (
`)
	//line server_cmd.qtpl:5
	if len(prefix) > 0 {
		//line server_cmd.qtpl:5
		qw422016.N().S(`
	"`)
		//line server_cmd.qtpl:6
		qw422016.E().S(appPath)
		//line server_cmd.qtpl:6
		qw422016.N().S(`/game/`)
		//line server_cmd.qtpl:6
		qw422016.E().S(prefix)
		//line server_cmd.qtpl:6
		qw422016.N().S(`_global"
	"`)
		//line server_cmd.qtpl:7
		qw422016.E().S(appPath)
		//line server_cmd.qtpl:7
		qw422016.N().S(`/game/`)
		//line server_cmd.qtpl:7
		qw422016.E().S(prefix)
		//line server_cmd.qtpl:7
		qw422016.N().S(`_handlers"
`)
		//line server_cmd.qtpl:8
	} else {
		//line server_cmd.qtpl:8
		qw422016.N().S(`
    "`)
		//line server_cmd.qtpl:9
		qw422016.E().S(appPath)
		//line server_cmd.qtpl:9
		qw422016.N().S(`/game/global"
	"`)
		//line server_cmd.qtpl:10
		qw422016.E().S(appPath)
		//line server_cmd.qtpl:10
		qw422016.N().S(`/game/handlers"
`)
		//line server_cmd.qtpl:11
	}
	//line server_cmd.qtpl:11
	qw422016.N().S(`
	"torch/game_server"
	"torch/log_handler"
	"fmt"
	"net/http"
	"sync"

	"github.com/gin-gonic/gin"

	"torch/utilities"

	"github.com/go-playground/log"
	"github.com/go-playground/log/handlers/console"
	"github.com/tidwall/buntdb"
	"github.com/spf13/cobra"
	"github.com/gorilla/websocket"
)

var serverCmd = &cobra.Command{
    Use:   "server",
	Short: "It start the game server application.",
	Long:  `)
	//line server_cmd.qtpl:11
	qw422016.N().S("`")
	//line server_cmd.qtpl:11
	qw422016.N().S(`It start the game server application.`)
	//line server_cmd.qtpl:11
	qw422016.N().S("`")
	//line server_cmd.qtpl:11
	qw422016.N().S(`,
    	
    Run: func(cmd *cobra.Command, args []string) {
        startServer()
    },
}

var wsupgrader = websocket.Upgrader{
	ReadBufferSize:  2048,
	WriteBufferSize: 2048,
	CheckOrigin:     func(r *http.Request) bool { return true },
}

func startServer(){

	utilities.InitMysqlDB()

	var err error
`)
	//line server_cmd.qtpl:50
	if len(prefix) > 0 {
		//line server_cmd.qtpl:50
		qw422016.N().S(`
	if `)
		//line server_cmd.qtpl:51
		qw422016.E().S(prefix)
		//line server_cmd.qtpl:51
		qw422016.N().S(`_global.BDB, err = buntdb.Open(":memory:"); err != nil {
`)
		//line server_cmd.qtpl:52
	} else {
		//line server_cmd.qtpl:52
		qw422016.N().S(`
	if global.BDB, err = buntdb.Open(":memory:"); err != nil {
`)
		//line server_cmd.qtpl:54
	}
	//line server_cmd.qtpl:54
	qw422016.N().S(`
		panic("Can not create buntdb")
	}

	cLog := console.New()

	log.RegisterHandler(cLog, log.DebugLevel, log.InfoLevel)
	log.RegisterHandler(&log_handler.PlayLogHandler{}, log.NoticeLevel)

	var wg sync.WaitGroup

`)
	//line server_cmd.qtpl:65
	if len(prefix) > 0 {
		//line server_cmd.qtpl:65
		qw422016.N().S(`
	`)
		//line server_cmd.qtpl:66
		qw422016.E().S(prefix)
		//line server_cmd.qtpl:66
		qw422016.N().S(`_global.GS = game_server.NewGameServer(&wg)
	`)
		//line server_cmd.qtpl:67
		qw422016.E().S(prefix)
		//line server_cmd.qtpl:67
		qw422016.N().S(`_handlers.BindRequestHandlers()

`)
		//line server_cmd.qtpl:69
	} else {
		//line server_cmd.qtpl:69
		qw422016.N().S(`
	global.GS = game_server.NewGameServer(&wg)
	handlers.BindRequestHandlers()

`)
		//line server_cmd.qtpl:73
	}
	//line server_cmd.qtpl:73
	qw422016.N().S(`
	

	r := gin.Default()

	r.GET("/`)
	//line server_cmd.qtpl:78
	qw422016.E().S(basename)
	//line server_cmd.qtpl:78
	qw422016.N().S(`_socket", func(c *gin.Context) {
		func(w http.ResponseWriter, r *http.Request) {
			conn, err := wsupgrader.Upgrade(w, r, nil)

			if err != nil {
				fmt.Println("Failed to set websocket upgrade: %+v", err)
				return
			}
`)
	//line server_cmd.qtpl:86
	if len(prefix) > 0 {
		//line server_cmd.qtpl:86
		qw422016.N().S(`

			game_server.NewWebSocketGameClient(conn, `)
		//line server_cmd.qtpl:88
		qw422016.E().S(prefix)
		//line server_cmd.qtpl:88
		qw422016.N().S(`_global.GS)
`)
		//line server_cmd.qtpl:89
	} else {
		//line server_cmd.qtpl:89
		qw422016.N().S(`
			game_server.NewWebSocketGameClient(conn, global.GS)

`)
		//line server_cmd.qtpl:92
	}
	//line server_cmd.qtpl:92
	qw422016.N().S(`

		}(c.Writer, c.Request)
	})

	r.Run(":8088")
	wg.Wait()

}


`)
//line server_cmd.qtpl:103
}

//line server_cmd.qtpl:103
func WriteGenerateServerCmd(qq422016 qtio422016.Writer, prefix string, appPath string, basename string) {
	//line server_cmd.qtpl:103
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line server_cmd.qtpl:103
	StreamGenerateServerCmd(qw422016, prefix, appPath, basename)
	//line server_cmd.qtpl:103
	qt422016.ReleaseWriter(qw422016)
//line server_cmd.qtpl:103
}

//line server_cmd.qtpl:103
func GenerateServerCmd(prefix string, appPath string, basename string) string {
	//line server_cmd.qtpl:103
	qb422016 := qt422016.AcquireByteBuffer()
	//line server_cmd.qtpl:103
	WriteGenerateServerCmd(qb422016, prefix, appPath, basename)
	//line server_cmd.qtpl:103
	qs422016 := string(qb422016.B)
	//line server_cmd.qtpl:103
	qt422016.ReleaseByteBuffer(qb422016)
	//line server_cmd.qtpl:103
	return qs422016
//line server_cmd.qtpl:103
}
